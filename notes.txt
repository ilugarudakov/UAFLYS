docker compose run --rm composer update

Импорт и миграции

Убедиться, что backend/migrations/init_db.php и backend/import/import.php отрабатывают в Docker-контейнере (запуском через docker compose exec backend …).

Проверить, что в базе заполнены все три таблицы: airports, airlines, routes.

Структуризация кода

Перенести всю логику из монолитного public/index.php в PSR-4–контроллеры и репозитории (src/Controller, src/Repository).

Настроить автозагрузку через vendor/autoload.php (composer.json) и лёгкий роутер (FastRoute).

Расширение API

Добавить опциональный фильтр по авиакомпании так, чтобы он работал и для пересадок (мы сейчас фильтруем все сегменты одним кодом; можно сделать «любая из»).

(Опционально) Поддержать выбор нескольких авиакомпаний сразу.

UI-улучшения

Показать название авиакомпании рядом с её IATA-кодом (мы передаём только код).

Добавить спиннер при загрузке данных и сообщение об ошибке под формой, если API вернуло 500.

Валидацию формы: не позволять сабмитить, пока не выбраны «Откуда» и «Куда».

Документация и тесты

Обновить README.md с инструкциями по миграциям, импорту и запуску (через Docker).

Написать простые unit-тесты (например, для методов репозиториев) и интеграционные (curl к эндпоинтам).

Доп. фичи (если хочется «зацепить глаз»)

Отображать дополнительно equipment (самолёты) или суммарное время полёта, если в данных есть такие поля.

Добавить пагинацию или лимит/оффсет, чтобы не тащить сотни маршрутов за раз.